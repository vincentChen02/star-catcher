{"version":3,"sources":["..\\..\\..\\..\\assets\\scripts/assets\\scripts\\Star.ts"],"names":[],"mappings":";;;;;AACA,iCAAiC;AAC3B,IAAA,kBAAqC,EAAnC,oBAAO,EAAE,sBAAQ,CAAmB;AAG5C;IAAkC,wBAAY;IAD9C;QAAA,qEAqCC;QAjCW,gBAAU,GAAW,CAAC,CAAC;;IAiCnC,CAAC;IA9BU,mBAAI,GAAX,UAAY,IAAI;QACZ,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;IACrB,CAAC;IACD,YAAY;IACZ,gCAAiB,GAAjB;QACI,IAAI,cAAc,GAAG,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,WAAW,EAAE,CAAC;QACxD,SAAS;QACT,IAAI,IAAI,GAAG,EAAE,CAAC,SAAS,CAAC,cAAc,EAAE,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QAC5D,MAAM,CAAC,IAAI,CAAC;IAChB,CAAC;IACD,QAAQ;IACR,uBAAQ,GAAR;QACI,UAAU;QACV,IAAI,CAAC,IAAI,CAAC,YAAY,EAAE,CAAC;QACzB,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE,CAAC;QACrB,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE,CAAC;IACxB,CAAC;IACD,qBAAM,GAAN,UAAO,EAAU;QACb,uBAAuB;QACvB,IAAI,GAAG,GAAG,IAAI,CAAC,iBAAiB,EAAE,CAAC;QACnC,EAAE,CAAC,CAAC,GAAG,GAAG,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC;YACxB,SAAS;YACT,IAAI,CAAC,QAAQ,EAAE,CAAC;YAChB,MAAM,CAAC;QACX,CAAC;QACD,0BAA0B;QAC1B,IAAI,YAAY,GAAG,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC;QAChE,IAAI,UAAU,GAAG,EAAE,CAAC;QACpB,IAAI,CAAC,IAAI,CAAC,OAAO,GAAG,UAAU,GAAG,IAAI,CAAC,KAAK,CAAC,YAAY,GAAG,CAAC,GAAG,GAAG,UAAU,CAAC,CAAC,CAAC;IACnF,CAAC;IAhCD;QADC,QAAQ,CAAC,EAAE,CAAC,OAAO,CAAC;4CACU;IAHd,IAAI;QADxB,OAAO;OACa,IAAI,CAoCxB;IAAD,WAAC;CApCD,AAoCC,CApCiC,EAAE,CAAC,SAAS,GAoC7C;kBApCoB,IAAI","file":"","sourceRoot":"..\\..\\..\\..\\assets\\scripts","sourcesContent":["\r\n// import { Game } from \"./Game\";\r\nconst { ccclass, property } = cc._decorator;\r\n\r\n@ccclass\r\nexport default class Star extends cc.Component {\r\n\r\n    @property(cc.Integer)\r\n    private pickRadius: number = 0;\r\n    private game;\r\n\r\n    public init(game) {\r\n        this.game = game;\r\n    }\r\n    //计算星星与主角的距离\r\n    getPlayerDistance() {\r\n        let playerPosition = this.game.playerNode.getPosition();\r\n        //返回两点间距离\r\n        let dist = cc.pDistance(playerPosition, this.node.position);\r\n        return dist;\r\n    }\r\n    //完成当前收集\r\n    onPicked() {\r\n        //得分 销毁 生成\r\n        this.game.spawnNewStar();\r\n        this.game.getScore();\r\n        this.node.destroy();\r\n    }\r\n    update(dt: number) {\r\n        // 每帧判断和主角之间的距离是否小于收集距离\r\n        let dis = this.getPlayerDistance();\r\n        if (dis < this.pickRadius) {\r\n            // 调用收集行为\r\n            this.onPicked();\r\n            return;\r\n        }\r\n        // 根据 Game 脚本中的计时器更新星星的透明度\r\n        let opacityRatio = 1 - this.game.timer / this.game.starDuration;\r\n        let minOpacity = 50;\r\n        this.node.opacity = minOpacity + Math.floor(opacityRatio * (255 - minOpacity));\r\n    }\r\n}\r\n"]}